name: aarch64 build, check

on:
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  IMAGE_NAME: bcachefs-tools-builder
  
jobs:

  build:

    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    env:
      platform: arm64
      buildxplatform: linux/arm64
    outputs:
      IMAGE_ID:  ${{ steps.setvars.outputs.IMAGE_ID }}
      VERSION:  ${{ steps.setvars.outputs.VERSION }}
    steps:

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Docker Setup Buildx
      id:   buildx
      uses: docker/setup-buildx-action@v1.6.0
    -
        name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
    -
      name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
    - 
      name: git checkout
      uses: actions/checkout@v2
    # - 
      # name: create dockerfile
      # run: |
          # BUILDER=builder
          # cat << 'ENDDOCKERFILE' > Dockerfile
          # ARG IMG=debian:bullseye
          # FROM $IMG as deb

          # ENV DEBIAN_FRONTEND=noninteractive
          # RUN apt-get update; apt-get install -y pkg-config libaio-dev libblkid-dev libkeyutils-dev \
                  # liblz4-dev libscrypt-dev libsodium-dev liburcu-dev libzstd-dev \
                  # uuid-dev zlib1g-dev valgrind libudev-dev git build-essential \
                  # python3 python3-docutils \
                  # python3-pytest devscripts debhelper
          # WORKDIR /build
          # ENDDOCKERFILE
    # - 
      # name: build image
      # env:
          # docker_platform: linux/aarch64
          # platform_short: aarch64
      # run: |          
          # docker buildx build --platform linux/aarch64 -t builder --load --label "runnumber=${GITHUB_RUN_ID}" .
          
          # IMAGE_NAME="builder"
          # IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # # Change all uppercase to lowercase
          # IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # # Strip git ref prefix from version
          # VERSION=${{ env.platform_short }}$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # # Strip "v" prefix from tag name
          # [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # # Use Docker `latest` tag convention
          # [ "$VERSION" == "master" ] && VERSION=latest
          # echo IMAGE_ID=$IMAGE_ID
          # echo VERSION=$VERSION
          # docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          # docker push $IMAGE_ID:$VERSION
    -
        name: Prepare container names
        id: setvars
        run: |
          #IMAGE_ID=$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID="ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:${{ env.platform }}"

          echo IMAGE_ID=$IMAGE_ID
          echo "IMAGE_ID=$IMAGE_ID" >> $GITHUB_ENV
          echo VERSION=$VERSION

          echo "::set-output name=IMAGE_ID::$IMAGE_ID"
          #echo "::set-output name=VERSION::$VERSION"
    - name: run build in container
      run: |        
          SHORTIMAGENAME="${{ env.IMAGE_ID }}"
          echo SHORTIMAGENAME ${SHORTIMAGENAME}
          docker run --platform ${{ env.platform }} \
            -v ${{ runner.workspace }}:/build ${SHORTIMAGENAME} \
            sh -c "pwd; cd /build/bcachefs-tools; ls -l; make; make deb"
          
    - name: show vars
      run: |
          pwd
          ls -l
          ls -l ../
          echo $(env)
          echo github.workspace ${{ github.workspace }}


    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v2
      with:
        name: debs x64 ${{ github.sha }}
        retention-days: 10
        path: |
              ${{ runner.workspace }}/bcachefs-tools_*
              ${{ runner.workspace }}/bcachefs-tools-dbgsym*

